

import java.util.Arrays;

public class MaxSumSubarray {

    // Brute force algorithm for finding maximum sum subarray
    public static int bruteForce(int[] arr) {
        int maxSum = Integer.MIN_VALUE;
        for (int i = 0; i < arr.length; i++) {
            for (int j = i; j < arr.length; j++) {
                int sum = 0;
                for (int k = i; k <= j; k++) {
                    sum += arr[k];
                }
                maxSum = Math.max(maxSum, sum);
            }
        }
        return maxSum;
    }

     // Kadan's algorithm
    public static int KadansAlgorithm(int a[])
    {
        int size = a.length;
        int max_so_far = Integer.MIN_VALUE, max_ending_here
                                            = 0;
 
        for (int i = 0; i < size; i++) {
            max_ending_here = max_ending_here + a[i];
            if (max_so_far < max_ending_here)
                max_so_far = max_ending_here;
            if (max_ending_here < 0)
                max_ending_here = 0;
        }
        return max_so_far;
    }

    public static void main(String[] args) {
        int[] arr = {-2, 1, -3, 4, -1, 2, 1, -5, 4,5,6,7,8,2,3,4,7,8,6,4,3,2,3,4,5,6,7,7,8,9,12,13,14,15,17,2, 1, 
        		-3, 4, -1, 2, 1, -5, 4,5,6,7,8,2,3,4,7,8,6,4,3,2,3,4,5,6,7,7,8,9,12,13,14,15,17,2, 1, -3, 4,
        		-1, 2, 1, -5, 4,5,6,7,8,2,3,4,7,8,6,4,3,2,3,4,5,6,7,7,8,9,12,13,14,15,17,2, 1, -3, 4, -1, 
        		2, 1, -5, 4,5,6,7,8,2,3,4,7,8,6,4,3,2,3,4,5,6,7,7,8,9,12,13,14,15,17,2, 1, -3, 4, -1, 2, 1, 
        		-5, 4,5,6,7,8,2,3,4,7,8,6,4,3,2,3,4,5,6,7,7,8,9,12,13,14,15,17,2, 1, -3, 4, -1, 2, 1, -5, 4,
        		5,6,7,8,2,3,4,7,8,6,4,3,2,3,4,5,6,7,7,8,9,12,13,14,15,17,2, 1, -3, 4, -1, 2, 1, -5, 4,5,6,7,8,2,
        		3,4,7,8,6,4,3,2,3,4,5,6,7,7,8,9,12,13,14,15,17};
        int count = 0;
        for (int i = 0; i < arr.length; i++) {
        	count++;
        }
        System.out.println(count+" numra jane ne varg");

        long startTime = System.currentTimeMillis();
        int maxSum = bruteForce(arr);
        long endTime = System.currentTimeMillis();
        System.out.println("Algoritmi Brute force: " + maxSum + " (merr kohe " + (endTime - startTime) + " milliseconds)");

        startTime = System.currentTimeMillis();
        maxSum = KadansAlgorithm(arr);
        endTime = System.currentTimeMillis();
        System.out.println("Algoritmi Kadan's: " + maxSum + " (merr kohe " + (endTime - startTime) + " milliseconds)");
}

}
